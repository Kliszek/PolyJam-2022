//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.2.0
//     from Assets/Scripts/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputScript : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputScript()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""Ground"",
            ""id"": ""57a50ff9-81ca-451d-9d5b-64c2e0e45732"",
            ""actions"": [
                {
                    ""name"": ""MoveHorizontally"",
                    ""type"": ""PassThrough"",
                    ""id"": ""eb186005-f54d-44a7-9d3e-a07f25b4db3f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveVertically"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7e7e550c-0a7f-41ef-baa3-ca8de9850573"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwapLevel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d9ba73cb-a2cc-48bc-93d4-c18b5ec2d2ff"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""PassThrough"",
                    ""id"": ""13b267e0-f393-4b1e-bbdd-da53a3064f6a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pause"",
                    ""type"": ""PassThrough"",
                    ""id"": ""a5f6def5-ea63-4104-9db5-d48e1256ca00"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""Arrows"",
                    ""id"": ""2dca1f20-6cc4-428b-83ad-36637bbb3575"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveHorizontally"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""7ed6da22-f457-4acc-be1d-8df000243e24"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveHorizontally"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""2abebf00-e3de-4ce9-bd36-f7f064c497ca"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveHorizontally"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""cf8e207f-3df2-4daa-bcb1-4a4c1f80adee"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveVertically"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""2274ab51-8ff1-4c02-9fbc-a7d0f4a9afed"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveVertically"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""13884b12-285b-48f9-a925-801ff7731f7e"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveVertically"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""27eaf314-47f8-493f-a1fe-cc340f48d27e"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1d6ae0f3-1826-4289-87a9-03e095f859ae"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwapLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b10f1222-5dcc-423d-83df-c143fe5727ec"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pause"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""GroundAlt"",
            ""id"": ""aee335f4-9bc1-4a48-9149-b1f8e9aceb40"",
            ""actions"": [
                {
                    ""name"": ""MoveHorizontally"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7aed86ee-656d-4e29-bd5a-cd079cb34e0e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""PassThrough"",
                    ""id"": ""93810f81-dc7b-45e6-8aba-bb9a97a7dbdc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveVertically"",
                    ""type"": ""PassThrough"",
                    ""id"": ""7145252a-7727-42bc-aac1-936d96ea4865"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SwapLevel"",
                    ""type"": ""PassThrough"",
                    ""id"": ""f2e13b9d-f4ae-4250-a691-7940c080efb9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""PassThrough"",
                    ""id"": ""c4ba4102-009c-4b44-acda-cf2e17e287c2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""AD"",
                    ""id"": ""380fd585-5c2a-42e7-ad68-bc720453ac40"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveHorizontally"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""7cfa2fdb-8bd3-461b-91db-9e811bd215f0"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveHorizontally"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""80719fee-7a8e-4022-ad6f-849492a14527"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveHorizontally"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ae2e62db-6436-40a0-9208-667e7069d85c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WS"",
                    ""id"": ""11fce3ab-eae3-49f2-b7da-ee0c93ce07da"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveVertically"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""d9d5d84c-00b7-437b-8060-a5fdbd8fdec7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveVertically"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""fdb7818b-9b0d-46a2-abd7-1bf91c0a1248"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveVertically"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""e7287ee0-4789-43f1-9278-8767f9f9fbb4"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwapLevel"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Negative"",
                    ""id"": ""c0c2d59d-7e4c-4be8-a9d1-2b2b65c59258"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwapLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Positive"",
                    ""id"": ""05a21990-1403-4d24-a5ae-4378efaffd89"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SwapLevel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7b7dfa6f-ae84-4a11-9642-373a95bac227"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Ground
        m_Ground = asset.FindActionMap("Ground", throwIfNotFound: true);
        m_Ground_MoveHorizontally = m_Ground.FindAction("MoveHorizontally", throwIfNotFound: true);
        m_Ground_MoveVertically = m_Ground.FindAction("MoveVertically", throwIfNotFound: true);
        m_Ground_SwapLevel = m_Ground.FindAction("SwapLevel", throwIfNotFound: true);
        m_Ground_Dash = m_Ground.FindAction("Dash", throwIfNotFound: true);
        m_Ground_Pause = m_Ground.FindAction("Pause", throwIfNotFound: true);
        // GroundAlt
        m_GroundAlt = asset.FindActionMap("GroundAlt", throwIfNotFound: true);
        m_GroundAlt_MoveHorizontally = m_GroundAlt.FindAction("MoveHorizontally", throwIfNotFound: true);
        m_GroundAlt_Jump = m_GroundAlt.FindAction("Jump", throwIfNotFound: true);
        m_GroundAlt_MoveVertically = m_GroundAlt.FindAction("MoveVertically", throwIfNotFound: true);
        m_GroundAlt_SwapLevel = m_GroundAlt.FindAction("SwapLevel", throwIfNotFound: true);
        m_GroundAlt_Dash = m_GroundAlt.FindAction("Dash", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Ground
    private readonly InputActionMap m_Ground;
    private IGroundActions m_GroundActionsCallbackInterface;
    private readonly InputAction m_Ground_MoveHorizontally;
    private readonly InputAction m_Ground_MoveVertically;
    private readonly InputAction m_Ground_SwapLevel;
    private readonly InputAction m_Ground_Dash;
    private readonly InputAction m_Ground_Pause;
    public struct GroundActions
    {
        private @PlayerInputScript m_Wrapper;
        public GroundActions(@PlayerInputScript wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveHorizontally => m_Wrapper.m_Ground_MoveHorizontally;
        public InputAction @MoveVertically => m_Wrapper.m_Ground_MoveVertically;
        public InputAction @SwapLevel => m_Wrapper.m_Ground_SwapLevel;
        public InputAction @Dash => m_Wrapper.m_Ground_Dash;
        public InputAction @Pause => m_Wrapper.m_Ground_Pause;
        public InputActionMap Get() { return m_Wrapper.m_Ground; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GroundActions set) { return set.Get(); }
        public void SetCallbacks(IGroundActions instance)
        {
            if (m_Wrapper.m_GroundActionsCallbackInterface != null)
            {
                @MoveHorizontally.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveHorizontally;
                @MoveHorizontally.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveHorizontally;
                @MoveHorizontally.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveHorizontally;
                @MoveVertically.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveVertically;
                @MoveVertically.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveVertically;
                @MoveVertically.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnMoveVertically;
                @SwapLevel.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnSwapLevel;
                @SwapLevel.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnSwapLevel;
                @SwapLevel.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnSwapLevel;
                @Dash.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnDash;
                @Pause.started -= m_Wrapper.m_GroundActionsCallbackInterface.OnPause;
                @Pause.performed -= m_Wrapper.m_GroundActionsCallbackInterface.OnPause;
                @Pause.canceled -= m_Wrapper.m_GroundActionsCallbackInterface.OnPause;
            }
            m_Wrapper.m_GroundActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveHorizontally.started += instance.OnMoveHorizontally;
                @MoveHorizontally.performed += instance.OnMoveHorizontally;
                @MoveHorizontally.canceled += instance.OnMoveHorizontally;
                @MoveVertically.started += instance.OnMoveVertically;
                @MoveVertically.performed += instance.OnMoveVertically;
                @MoveVertically.canceled += instance.OnMoveVertically;
                @SwapLevel.started += instance.OnSwapLevel;
                @SwapLevel.performed += instance.OnSwapLevel;
                @SwapLevel.canceled += instance.OnSwapLevel;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Pause.started += instance.OnPause;
                @Pause.performed += instance.OnPause;
                @Pause.canceled += instance.OnPause;
            }
        }
    }
    public GroundActions @Ground => new GroundActions(this);

    // GroundAlt
    private readonly InputActionMap m_GroundAlt;
    private IGroundAltActions m_GroundAltActionsCallbackInterface;
    private readonly InputAction m_GroundAlt_MoveHorizontally;
    private readonly InputAction m_GroundAlt_Jump;
    private readonly InputAction m_GroundAlt_MoveVertically;
    private readonly InputAction m_GroundAlt_SwapLevel;
    private readonly InputAction m_GroundAlt_Dash;
    public struct GroundAltActions
    {
        private @PlayerInputScript m_Wrapper;
        public GroundAltActions(@PlayerInputScript wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveHorizontally => m_Wrapper.m_GroundAlt_MoveHorizontally;
        public InputAction @Jump => m_Wrapper.m_GroundAlt_Jump;
        public InputAction @MoveVertically => m_Wrapper.m_GroundAlt_MoveVertically;
        public InputAction @SwapLevel => m_Wrapper.m_GroundAlt_SwapLevel;
        public InputAction @Dash => m_Wrapper.m_GroundAlt_Dash;
        public InputActionMap Get() { return m_Wrapper.m_GroundAlt; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GroundAltActions set) { return set.Get(); }
        public void SetCallbacks(IGroundAltActions instance)
        {
            if (m_Wrapper.m_GroundAltActionsCallbackInterface != null)
            {
                @MoveHorizontally.started -= m_Wrapper.m_GroundAltActionsCallbackInterface.OnMoveHorizontally;
                @MoveHorizontally.performed -= m_Wrapper.m_GroundAltActionsCallbackInterface.OnMoveHorizontally;
                @MoveHorizontally.canceled -= m_Wrapper.m_GroundAltActionsCallbackInterface.OnMoveHorizontally;
                @Jump.started -= m_Wrapper.m_GroundAltActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_GroundAltActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_GroundAltActionsCallbackInterface.OnJump;
                @MoveVertically.started -= m_Wrapper.m_GroundAltActionsCallbackInterface.OnMoveVertically;
                @MoveVertically.performed -= m_Wrapper.m_GroundAltActionsCallbackInterface.OnMoveVertically;
                @MoveVertically.canceled -= m_Wrapper.m_GroundAltActionsCallbackInterface.OnMoveVertically;
                @SwapLevel.started -= m_Wrapper.m_GroundAltActionsCallbackInterface.OnSwapLevel;
                @SwapLevel.performed -= m_Wrapper.m_GroundAltActionsCallbackInterface.OnSwapLevel;
                @SwapLevel.canceled -= m_Wrapper.m_GroundAltActionsCallbackInterface.OnSwapLevel;
                @Dash.started -= m_Wrapper.m_GroundAltActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_GroundAltActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_GroundAltActionsCallbackInterface.OnDash;
            }
            m_Wrapper.m_GroundAltActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MoveHorizontally.started += instance.OnMoveHorizontally;
                @MoveHorizontally.performed += instance.OnMoveHorizontally;
                @MoveHorizontally.canceled += instance.OnMoveHorizontally;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @MoveVertically.started += instance.OnMoveVertically;
                @MoveVertically.performed += instance.OnMoveVertically;
                @MoveVertically.canceled += instance.OnMoveVertically;
                @SwapLevel.started += instance.OnSwapLevel;
                @SwapLevel.performed += instance.OnSwapLevel;
                @SwapLevel.canceled += instance.OnSwapLevel;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
            }
        }
    }
    public GroundAltActions @GroundAlt => new GroundAltActions(this);
    public interface IGroundActions
    {
        void OnMoveHorizontally(InputAction.CallbackContext context);
        void OnMoveVertically(InputAction.CallbackContext context);
        void OnSwapLevel(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnPause(InputAction.CallbackContext context);
    }
    public interface IGroundAltActions
    {
        void OnMoveHorizontally(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMoveVertically(InputAction.CallbackContext context);
        void OnSwapLevel(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
    }
}
